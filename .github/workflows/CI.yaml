name: ci

on:
  push:
    branches:
      - "master"
  pull_request:
    branches:
      - "master"

jobs:
  lint_and_test:
    name: Test on ${{ matrix.os }}, Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: [3.10, 3.11, 3.12, 3.13]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox tox-gh-actions

    - name: Run tests
      run: tox


  publish:
    needs: lint_and_test
    name: Publish package to pypi
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Additional info about the build
      shell: bash
      run: |
        uname -a
        df -h
        ulimit -a

    - uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: 3.10
        environment-file: environment.yaml

        channels: conda-forge,defaults

        activate-environment: nonadditivity
        auto-update-conda: false
        auto-activate-base: false
        show-channel-urls: true

    - name: Install package

      # conda setup requires this special shell
      shell: bash -l {0}
      run: |
        poetry install

    # - name: publish
    #   env:
    #     PYPI_UN: ${{ secrets.CI_PYPI_USERNAME }}
    #     PYPI_PW: ${{ secrets.CI_PYPI_PW }}
    #   shell: bash -l {0}

    #   run: |
    #     PKG_VERSION=$(nonadditivity --version | sed -n -e 's/^.*version //p')
    #     PYPI_VERSION=$(curl https://pypi.org/pypi/nonadditivity/json | jq -r '.version')
    #     if [ $PKG_VERSION > $PYPI_VERSION ]; then poetry publish --build -u $PYPI_UN -p $PYPI_PW ; fi

